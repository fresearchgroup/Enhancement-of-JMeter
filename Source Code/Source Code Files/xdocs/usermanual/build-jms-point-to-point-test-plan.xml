<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!DOCTYPE document[<!ENTITY sect-num '11'>]>

<document prev="build-ws-test-plan.html" next="build-jms-topic-test-plan.html" id="$Id: build-jms-point-to-point-test-plan.xml 1346152 2012-06-04 21:01:13Z pmouawad $">

    <properties>
        <title>User's Manual: Building a JMS (Java Messaging Service) Point-to-Point Test Plan</title>
    </properties>

    <body>


        <section name="&sect-num;. Building a JMS Point-to-Point Test Plan" anchor="building">

        <note>
            Make sure the required jar files are in JMeter's lib directory. If they are not, shutdown JMeter,
            copy the jar files over and restart JMeter. 
            See <a href="get-started.html#libraries_activemq">Getting Started</a> for details.
        </note>

            <p>In this section, you will learn how to create a
                <a href="build-test-plan.html">Test Plan</a> to test a JMS Point-to-Point messaging solution.
The setup of the test is 1 threadgroup with 5 threads sending 4 messages each through a request queue.
A fixed reply queue will be used for monitoring the reply messages.
To construct the Test Plan, you will use the
following elements:
                <a href="test_plan.html#thread_group">Thread Group</a>,
                <complink name="JMS Point-to-Point"/>, and
                <complink name="Graph Results"/>.
            </p>

            <p>General notes on JMS: There are currently two JMS samplers. One uses JMS topics
and the other uses queues. Topic messages are commonly known as pub/sub messaging.
Topic messaging is generally used in cases where a message is published by a producer and
consumed by multiple subscribers.  A JMS sampler needs the JMS implementation jar files;
for example, from Apache ActiveMQ.  See <a href="#libraries_activemq">here</a> for the list
of jars provided by ActiveMQ 3.0.</p>

        </section>

        <section name="&sect-num;.1 Adding a Thread Group" anchor="adding_threadgroup">
            <p>The first step you want to do with every JMeter Test Plan is to add a
                <a href="test_plan.html#thread_group">Thread Group</a> element.  The Thread Group tells
JMeter the number of users you want to simulate, how often the users should send
requests, and the how many requests they should send.
            </p>

            <p>Go ahead and add the ThreadGroup element by first selecting the Test Plan,
clicking your right mouse button to get the Add menu, and then select
Add --&gt; ThreadGroup.</p>

            <p>You should now see the Thread Group element under Test Plan.  If you do not
see the element, then "expand" the Test Plan tree by clicking on the
Test Plan element.</p>

            <p>Next, you need to modify the default properties.  Select the Thread Group element
in the tree, if you have not already selected it. You should now see the Thread
Group Control Panel in the right section of the JMeter window (see Figure &sect-num;.1
below)</p>

            <figure image="webtest/threadgroup.png">
Figure &sect-num;.1. Thread Group with Default Values</figure>

            <p>Start by providing a more descriptive name for our Thread Group. In the name
field, enter Point-to-Point.</p>

            <p>Next, increase the number of users (called threads) to 5.</p>

            <p>In the next field, the Ramp-Up Period, leave set the value to 0
seconds.  This property tells JMeter how long to delay between starting each
user. For example, if you enter a Ramp-Up Period of 5 seconds, JMeter will
finish starting all of your users by the end of the 5 seconds.  So, if we have
5 users and a 5 second Ramp-Up Period, then the delay between starting users
would be 1 second (5 users / 5 seconds = 1 user per second).  If you set the
value to 0, then JMeter will immediately start all of your users.</p>

            <p>Clear the checkbox labeled "Forever", and enter a value of 4 in the Loop
Count field.  This property tells JMeter how many times to repeat your test.
If you enter a loop count value of 0, then JMeter will run your test only
once. To have JMeter repeatedly run your Test Plan, select the Forever
checkbox.</p>

            <note>In most applications, you have to manually accept
changes you make in a Control Panel.  However, in JMeter, the Control Panel
automatically accepts your changes as you make them.  If you change the
name of an element, the tree will be updated with the new text after you
leave the Control Panel (for example, when selecting another tree element).</note>


        </section>

        <section name="&sect-num;.2 Adding JMS Point-to-Point Sampler" anchor="adding_point_to_point_sampler">

            <p>Start by adding the sampler <complink name="JMS Point-to-Point"/>
to the Point-to-Point element (Add --&gt; Sampler --&gt; JMS Point-to-Point).
Then, select the JMS Point-to-Point sampler element in the tree.
 In building the example a configuration will be provided that works with ActiveMQ 3.0.
            </p>
            <p>
                <table>
                    <thead />
                    <tr>
                        <th>Name</th>
                        <th>Value</th>
                        <th>Description</th>
                    </tr>
                    <tbody />
                    <tr>
                        <th colspan="3">JMS Resources</th>
                    </tr>
                    <tr>
                        <td colspan="1">QueueuConnectionFactory</td>
                        <td>ConnectionFactory</td>
                        <td> This is the default JNDI entry for the connection factory within active mq.</td>
                    </tr>
                    <tr>
                        <td>JNDI Name Request Queue</td>
                        <td>Q.REQ</td>
                        <td>This is equal to the JNDI name defined in the JNDI properties.</td>
                    </tr>
                    <tr>
                        <td>JNDI Name Reply Queue</td>
                        <td>Q.RPL</td>
                        <td>This is equal to the JNDI name defined in the JNDI properties.</td>
                    </tr>
                    <tr>
                        <th colspan="3">Message Properties</th>
                    </tr>
                    <tr>
                        <td colspan="1">Communication Style</td>
                        <td>Request Response</td>
                        <td>This means that you need at least a service running outside of JMeter and that will respond to the requests. 
                        This service must listen to the Request Queue and send messages to the queue referenced by the <code>message.getJMSReplyTo()</code></td>
                    </tr>
                    <tr>
                        <td>Content</td>
                        <td>test</td>
                        <td>This is just the content of the message.</td>
                    </tr>
                    <tr>
                        <td>JMS Properties</td>
                        <td></td>
                        <td>Nothing needed for active mq.</td>
                    </tr>
                    <tr>
                         <th colspan="3">JNDI Properties</th>
                     </tr>
                     <tr>
                        <td colspan="1">InitialContextFactory</td>
                        <td>org.apache.activemq.jndi.ActiveMQInitialContextFactory</td>
                        <td>The standard InitialContextFactory for Active MQ</td>
                    </tr>
                    <tr>
                        <th colspan="3"> Properties</th>
                    </tr>
                    <tr>
                        <td colspan="1">queue.Q.REQ</td>
                        <td>example.A</td>
                        <td>This defines a JNDI name Q.REQ for the request queue that points to the queue example.A</td>
                    </tr>
                    <tr>
                        <td colspan="1">queue.Q.RPL</td>
                        <td>example.B</td>
                        <td>This defines a JNDI name Q.RPL for the reply queue that points to the queue example.B</td>
                    </tr>
                    <tr>
                        <th colspan="3">Provider URL</th>
                    </tr>
                    <tr>
                        <td colspan="1">Provider URL</td>
                        <td>tcp://localhost:61616</td>
                        <td>This defines the URL of the active mq messaging system.</td>
                    </tr>
                </table>
            </p>

        </section>

        <section name="&sect-num;.3 Adding a Listener to View Store the Test Results" anchor="adding_listener">
            <p>The final element you need to add to your Test Plan is a
                <a href="component_reference.html#listeners">Listener</a>. This element is
responsible for storing all of the results of your JMS requests in a file and presenting
a visual model of the data.
            </p>

            <p>Select the Thread Group element and add a
                <complink name="Graph Results"/> listener (Add --&gt; Listener
--&gt; Graph Results).  Next, you need to specify a directory and filename of the
output file.  You can either type it into the filename field, or select the
Browse button and browse to a directory and then enter a filename.
            </p>

            <figure width="915" height="686" image="graph_results.png">
Figure &sect-num;.2. Graph Results Listener</figure>

        </section>

    </body>
</document>
